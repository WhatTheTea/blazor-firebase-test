@page "/people"
@using Firebase.Database
@using BlazorFirebaseTest.Models
@using System.Text.Json
@using Firebase.Database.Query
@inject HttpClient Http
@inject NavigationManager Navigation
@inject FirebaseClient FirebaseClient

<PageTitle>People</PageTitle>

<h1>Люди з БД</h1>

<p>Дістаємо дані з Realtime Database</p>

@if (string.IsNullOrEmpty(peopleJson))
{
    <p>
        <em>Завантаження...</em>
    </p>
}
else
{
    <button @onclick="NavigateToCreate">Add person</button>
    <table class="table">
        <thead>
        <tr>
            <th>Ім'я</th>
            <th>Прізвище</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var person in people)
        {
            <tr>
                <td>@person.FirstName</td>
                <td>@person.LastName</td>
                <td>
                    <button @onclick="() => RemovePerson(person)">delete</button>
                </td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private string peopleJson = string.Empty;
    private IEnumerable<Person> people;

    protected override async Task OnInitializedAsync()
    {
        peopleJson =  await this.FirebaseClient
            .Child("People")
            .OnceAsJsonAsync();
        people = JsonSerializer.Deserialize<Dictionary<string, Person>>(peopleJson)?.Values
        ?? throw new Exception("Data was not supplied");
    }

    private async void RemovePerson(Person person) =>
        await this.FirebaseClient
            .Child("People")
            .Child(person.Id)
            .DeleteAsync();

    private void NavigateToCreate() => Navigation.NavigateTo("/people/create");

}